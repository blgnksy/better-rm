name: Build and Test

on:
  workflow_dispatch:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        compiler: [ gcc, clang ]
        build_type: [ Debug, Release ]

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential clang cppcheck check

      - name: Configure CMake
        run: |
          cmake -B build \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCMAKE_C_COMPILER=${{ matrix.compiler }} \
            -DBUILD_TESTS=ON

      - name: Build
        run: cmake --build build

      - name: Run cppcheck
        run: |
          cppcheck --enable=all --error-exitcode=1 \
            --suppress=missingIncludeSystem \
            --inline-suppr \
            -I include/ \
            src

      - name: Run tests
        run: |
          cd build
          ctest --output-on-failure -V

      - name: Test installation
        run: |
          cd build
          sudo make install

          # Find the installed binary (could be safe_rm or better-rm)
          if which safe_rm >/dev/null 2>&1; then
            BIN=safe_rm
          elif which better-rm >/dev/null 2>&1; then
            BIN=better-rm
          else
            echo "Error: Binary not found after installation!"
            exit 1
          fi

          # Test it works
          $BIN --version
          $BIN --help

      - name: Test basic functionality
        run: |
          BIN=better-rm

          # Create test files
          mkdir -p test_dir
          touch test_file.txt test_dir/nested.txt

          # Test dry-run
          $BIN -n test_file.txt | grep -q "DRY-RUN" || exit 1
          [ -f test_file.txt ] || exit 1

          # Test trash mode
          $BIN -t test_file.txt
          [ ! -f test_file.txt ] || exit 1
          ls ~/.Trash/test_file.txt.* || exit 1

          # Test protection
          $BIN / 2>&1 | grep -q "Protected system directory" || exit 1
