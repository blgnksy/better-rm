name: Bump version

on:
  push:
    branches:
      - master

jobs:
  bump-version:
    if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, 'bump:')"
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"
          version: "latest"

      - name: Set up Python environment
        run: |
          # uv will automatically use Python 3.8 from .python-version file
          uv sync --dev

      - name: Configure git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Check if version bump is needed
        id: check_bump
        run: |
          # Get the latest tag
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"
          
          # Check if there are commits since the last tag that warrant a version bump
          if git log $LATEST_TAG..HEAD --grep="^feat\|^fix\|^perf\|BREAKING CHANGE" --oneline | grep -q .; then
            echo "bump_needed=true" >> $GITHUB_OUTPUT
          else
            echo "bump_needed=false" >> $GITHUB_OUTPUT
            echo "No commits found that require a version bump"
          fi

      - name: Bump version
        if: steps.check_bump.outputs.bump_needed == 'true'
        id: bump
        run: |
          # Run commitizen bump
          uv run cz bump --yes --changelog
          
          # Get the new version
          NEW_VERSION=$(cat VERSION)
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"

      - name: Push changes
        if: steps.check_bump.outputs.bump_needed == 'true'
        run: |
          git push origin main --follow-tags

      - name: Create GitHub Release
        if: steps.check_bump.outputs.bump_needed == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.bump.outputs.new_version }}
          name: Release v${{ steps.bump.outputs.new_version }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}